Cholesky factorization (implemented as a graph algorithm)

The current C++ implementation implements only the second portion of the
algorithm (the numeric factorization). The first part of the algorithm is
only implemented by the Python version so far.  

The filled graph and dependency graph files are included (in
../../inputs/cholesky) for two matrices (matrix1 and very-sparse). The filled
graphs should be converted to a .gr using graph-convert:

  graph-convert -floatedgelist2gr matrix1.txt.filled matrix1.txt.filled.gr

To perform numeric factorization:

  NumericCholesky matrix1.txt.filled.gr matrix1.txt.dep
  diff choleskyedges.txt matrix1.txt.choleskyedges 

Unfortunately, the edge weights are not formatted exactly the same way, so you
might prefer to use paste instead of diff.

===============================================================================

The Python version implements the full algorithm, and works. (Although it is
single-threaded.)

It requires the NetworkX graph library: https://pypi.python.org/pypi/networkx/

  wget http://pypi.python.org/packages/source/n/networkx/networkx-1.7.tar.gz
  tar xf networkx-1.7.tar.gz; (cd networkx-1.7; python setup.py build)
  ln -s networkx-1.7/build/lib/networkx

If you run it on a matrix, it will save the filled graph and dependency graph.
These are input to the C++ version to perform the numeric factorization.
It will also save a copy of the graph representation of the answer for
comparison against the C++ version.

