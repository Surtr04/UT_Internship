#!/usr/bin/env perl


use strict;
use warnings;
use Data::Dumper;
use Text::CSV;

$/ = '\n';
my $folder = shift;
my @files = split /\n/, qx{ls $folder};
my $results = {};

chdir $folder;

foreach my $file (@files) {
	if ($file =~ m/gmetis\_(\d+)\_(\d+)/) {
		my $partition = $1; 
		my $thread = $2;
		
		open F, "<", $file or die "$!";

		while (<F>) {
			push(@{$results->{$partition}->{$thread}},$thread);
			push(@{$results->{$partition}->{$thread}},$1) if $_ =~ m/Time:\s+(\d+)/;
			push(@{$results->{$partition}->{$thread}},$1) if $_ =~ m/Time coarsen:\s+(\d+).*/;
			push(@{$results->{$partition}->{$thread}},$1) if $_ =~ m/Time clustering:\s+(\d+).*/;
			push(@{$results->{$partition}->{$thread}},$1) if $_ =~ m/Time refinement:\s+(\d+).*/;
			# $results->{$partition}->{$thread}->{total} = $1 if $_ =~ m/Time:\s+(\d+)/;
			# $results->{$partition}->{$thread}->{coarsen} = $1 if $_ =~ m/Time coarsen:\s+(\d+).*/;
			# $results->{$partition}->{$thread}->{clustering} = $1 if $_ =~ m/Time clustering:\s+(\d+).*/;
			# $results->{$partition}->{$thread}->{refinement} = $1 if $_ =~ m/Time refinement:\s+(\d+).*/;
		}		

	}
}

print Dumper($results);

chdir "..";

if(-d "results") {
	chdir "results";
}
else {
	mkdir "results";
	chdir "results";
}

my $csv = Text::CSV->new ( { binary => 1 } ) or die "Cannot use CSV: ".Text::CSV->error_diag ();
$csv->eol ("\r\n");
$csv->column_names('nthreads','total', 'coarsen', 'clustering', 'refinement'); 



foreach my $k (keys $results) {

	open my $fh, ">:encoding(utf8)", "results_p$k.csv" or die "results_p$k.csv: $!";

	foreach my $k2 (keys $results->{$k}) {

		$csv->print($fh,$results->{$k}->{$k2});

	}

}


__END__


thread 1 thread 2 
